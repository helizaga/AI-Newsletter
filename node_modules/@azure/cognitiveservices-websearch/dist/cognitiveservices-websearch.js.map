{"version":3,"file":"cognitiveservices-websearch.js","sources":["../node_modules/tslib/tslib.es6.js","../src/models/index.ts","../src/models/mappers.ts","../src/models/webMappers.ts","../src/models/parameters.ts","../src/operations/web.ts","../src/webSearchClientContext.ts","../src/webSearchClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ServiceClientOptions } from \"@azure/ms-rest-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\n/**\n * Defines the query context that Bing used for the request.\n */\nexport interface QueryContext {\n  /**\n   * The query string as specified in the request.\n   */\n  originalQuery: string;\n  /**\n   * The query string used by Bing to perform the query. Bing uses the altered query string if the\n   * original query string contained spelling mistakes. For example, if the query string is \"saling\n   * downwind\", the altered query string will be \"sailing downwind\". This field is included only if\n   * the original query string contains a spelling mistake.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alteredQuery?: string;\n  /**\n   * The query string to use to force Bing to use the original string. For example, if the query\n   * string is \"saling downwind\", the override query string will be \"+saling downwind\". Remember to\n   * encode the query string which results in \"%2Bsaling+downwind\". This field is included only if\n   * the original query string contains a spelling mistake.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alterationOverrideQuery?: string;\n  /**\n   * A Boolean value that indicates whether the specified query has adult intent. The value is true\n   * if the query has adult intent; otherwise, false.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly adultIntent?: boolean;\n  /**\n   * A Boolean value that indicates whether Bing requires the user's location to provide accurate\n   * results. If you specified the user's location by using the X-MSEdge-ClientIP and\n   * X-Search-Location headers, you can ignore this field. For location aware queries, such as\n   * \"today's weather\" or \"restaurants near me\" that need the user's location to provide accurate\n   * results, this field is set to true. For location aware queries that include the location (for\n   * example, \"Seattle weather\"), this field is set to false. This field is also set to false for\n   * queries that are not location aware, such as \"best sellers\".\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly askUserForLocation?: boolean;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isTransactional?: boolean;\n}\n\n/**\n * Defines a webpage's metadata.\n */\nexport interface WebMetaTag {\n  /**\n   * The metadata.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The name of the metadata.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly content?: string;\n}\n\n/**\n * Contains the possible cases for ResponseBase.\n */\nexport type ResponseBaseUnion = ResponseBase | IdentifiableUnion;\n\n/**\n * An interface representing ResponseBase.\n */\nexport interface ResponseBase {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ResponseBase\";\n}\n\n/**\n * Contains the possible cases for Identifiable.\n */\nexport type IdentifiableUnion = Identifiable | ResponseUnion;\n\n/**\n * Defines the identity of a resource.\n */\nexport interface Identifiable {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Identifiable\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n}\n\n/**\n * Contains the possible cases for Response.\n */\nexport type ResponseUnion = Response | SearchResponse | ThingUnion | AnswerUnion | ErrorResponse;\n\n/**\n * Defines a response. All schemas that could be returned at the root of a response should inherit\n * from this\n */\nexport interface Response {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Response\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n}\n\n/**\n * Contains the possible cases for Thing.\n */\nexport type ThingUnion = Thing | CreativeWorkUnion | IntangibleUnion;\n\n/**\n * An interface representing Thing.\n */\nexport interface Thing {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Thing\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n}\n\n/**\n * Contains the possible cases for CreativeWork.\n */\nexport type CreativeWorkUnion = CreativeWork | WebPage | MediaObjectUnion | ArticleUnion;\n\n/**\n * An interface representing CreativeWork.\n */\nexport interface CreativeWork {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"CreativeWork\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n}\n\n/**\n * Contains the possible cases for MediaObject.\n */\nexport type MediaObjectUnion = MediaObject | ImageObject | VideoObject;\n\n/**\n * An interface representing MediaObject.\n */\nexport interface MediaObject {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"MediaObject\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * Original URL to retrieve the source (file) for the media object (e.g the source URL for the\n   * image).\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly contentUrl?: string;\n  /**\n   * URL of the page that hosts the media object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly hostPageUrl?: string;\n  /**\n   * The width of the source media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly width?: number;\n  /**\n   * The height of the source media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly height?: number;\n}\n\n/**\n * Defines an image\n */\nexport interface ImageObject {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ImageObject\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * Original URL to retrieve the source (file) for the media object (e.g the source URL for the\n   * image).\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly contentUrl?: string;\n  /**\n   * URL of the page that hosts the media object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly hostPageUrl?: string;\n  /**\n   * The width of the source media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly width?: number;\n  /**\n   * The height of the source media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly height?: number;\n  /**\n   * The URL to a thumbnail of the image\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnail?: ImageObject;\n}\n\n/**\n * Defines a webpage that is relevant to the query.\n */\nexport interface WebPage {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"WebPage\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * The display URL of the webpage. The URL is meant for display purposes only and is not well\n   * formed.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly displayUrl?: string;\n  /**\n   * A snippet of text from the webpage that describes its contents.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly snippet?: string;\n  /**\n   * A list of links to related content that Bing found in the website that contains this webpage.\n   * The Webpage object in this context includes only the name, url, urlPingSuffix, and snippet\n   * fields.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly deepLinks?: WebPage[];\n  /**\n   * The last time that Bing crawled the webpage. The date is in the form, YYYY-MM-DDTHH:MM:SS. For\n   * example, 2015-04-13T05:23:39.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly dateLastCrawled?: string;\n  /**\n   * A list of search tags that the webpage owner specified on the webpage. The API returns only\n   * indexed search tags. The name field of the MetaTag object contains the indexed search tag.\n   * Search tags begin with search.* (for example, search.assetId). The content field contains the\n   * tag's value.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly searchTags?: WebMetaTag[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly primaryImageOfPage?: ImageObject;\n}\n\n/**\n * Contains the possible cases for Answer.\n */\nexport type AnswerUnion = Answer | Computation | SearchResultsAnswerUnion;\n\n/**\n * An interface representing Answer.\n */\nexport interface Answer {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Answer\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly followUpQueries?: Query[];\n}\n\n/**\n * Contains the possible cases for SearchResultsAnswer.\n */\nexport type SearchResultsAnswerUnion = SearchResultsAnswer | WebWebAnswer | Images | News | RelatedSearchesRelatedSearchAnswer | SpellSuggestions | TimeZone | Videos | Places;\n\n/**\n * An interface representing SearchResultsAnswer.\n */\nexport interface SearchResultsAnswer {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"SearchResultsAnswer\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly followUpQueries?: Query[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly queryContext?: QueryContext;\n  /**\n   * The estimated number of webpages that are relevant to the query. Use this number along with\n   * the count and offset query parameters to page the results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalEstimatedMatches?: number;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isFamilyFriendly?: boolean;\n}\n\n/**\n * Defines a list of relevant webpage links.\n */\nexport interface WebWebAnswer {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Web/WebAnswer\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly followUpQueries?: Query[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly queryContext?: QueryContext;\n  /**\n   * The estimated number of webpages that are relevant to the query. Use this number along with\n   * the count and offset query parameters to page the results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalEstimatedMatches?: number;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isFamilyFriendly?: boolean;\n  /**\n   * A list of webpages that are relevant to the query.\n   */\n  value: WebPage[];\n  /**\n   * A Boolean value that indicates whether the response excluded some results from the answer. If\n   * Bing excluded some results, the value is true.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly someResultsRemoved?: boolean;\n}\n\n/**\n * Defines a search query.\n */\nexport interface Query {\n  /**\n   * The query string. Use this string as the query term in a new search request.\n   */\n  text: string;\n  /**\n   * The display version of the query term. This version of the query term may contain special\n   * characters that highlight the search term found in the query string. The string contains the\n   * highlighting characters only if the query enabled hit highlighting\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly displayText?: string;\n  /**\n   * The URL that takes the user to the Bing search results page for the query.Only related search\n   * results include this field.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly searchLink?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnail?: ImageObject;\n}\n\n/**\n * Defines an image answer\n */\nexport interface Images {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Images\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly followUpQueries?: Query[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly queryContext?: QueryContext;\n  /**\n   * The estimated number of webpages that are relevant to the query. Use this number along with\n   * the count and offset query parameters to page the results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalEstimatedMatches?: number;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isFamilyFriendly?: boolean;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextOffset?: number;\n  /**\n   * A list of image objects that are relevant to the query. If there are no results, the List is\n   * empty.\n   */\n  value: ImageObject[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly queryExpansions?: Query[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly similarTerms?: Query[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly relatedSearches?: Query[];\n}\n\n/**\n * Contains the possible cases for Article.\n */\nexport type ArticleUnion = Article | NewsArticle;\n\n/**\n * An interface representing Article.\n */\nexport interface Article {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Article\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * The number of words in the text of the Article.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly wordCount?: number;\n}\n\n/**\n * Defines a news article.\n */\nexport interface NewsArticle {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"NewsArticle\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * The number of words in the text of the Article.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly wordCount?: number;\n}\n\n/**\n * Defines a news answer.\n */\nexport interface News {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"News\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly followUpQueries?: Query[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly queryContext?: QueryContext;\n  /**\n   * The estimated number of webpages that are relevant to the query. Use this number along with\n   * the count and offset query parameters to page the results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalEstimatedMatches?: number;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isFamilyFriendly?: boolean;\n  /**\n   * An array of NewsArticle objects that contain information about news articles that are relevant\n   * to the query. If there are no results to return for the request, the array is empty.\n   */\n  value: NewsArticle[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly location?: string;\n}\n\n/**\n * Defines a list of related queries made by others.\n */\nexport interface RelatedSearchesRelatedSearchAnswer {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"RelatedSearches/RelatedSearchAnswer\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly followUpQueries?: Query[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly queryContext?: QueryContext;\n  /**\n   * The estimated number of webpages that are relevant to the query. Use this number along with\n   * the count and offset query parameters to page the results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalEstimatedMatches?: number;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isFamilyFriendly?: boolean;\n  /**\n   * A list of related queries that were made by others.\n   */\n  value: Query[];\n}\n\n/**\n * Defines a suggested query string that likely represents the user's intent. The search results\n * include this response if Bing determines that the user may have intended to search for something\n * different. For example, if the user searches for alon brown, Bing may determine that the user\n * likely intended to search for Alton Brown instead (based on past searches by others of Alon\n * Brown).\n */\nexport interface SpellSuggestions {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"SpellSuggestions\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly followUpQueries?: Query[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly queryContext?: QueryContext;\n  /**\n   * The estimated number of webpages that are relevant to the query. Use this number along with\n   * the count and offset query parameters to page the results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalEstimatedMatches?: number;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isFamilyFriendly?: boolean;\n  /**\n   * A list of suggested query strings that may represent the user's intention. The list contains\n   * only one Query object.\n   */\n  value: Query[];\n}\n\n/**\n * Defines a date and time for a geographical location.\n */\nexport interface TimeZoneTimeZoneInformation {\n  /**\n   * The name of the geographical location.For example, County; City; City, State; City, State,\n   * Country; or Time Zone.\n   */\n  location: string;\n  /**\n   * The data and time specified in the form, YYYY-MM-DDThh;mm:ss.ssssssZ.\n   */\n  time: string;\n  /**\n   * The offset from UTC. For example, UTC-7.\n   */\n  utcOffset: string;\n}\n\n/**\n * Defines the data and time of one or more geographic locations.\n */\nexport interface TimeZone {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"TimeZone\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly followUpQueries?: Query[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly queryContext?: QueryContext;\n  /**\n   * The estimated number of webpages that are relevant to the query. Use this number along with\n   * the count and offset query parameters to page the results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalEstimatedMatches?: number;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isFamilyFriendly?: boolean;\n  /**\n   * The data and time, in UTC, of the geographic location specified in the query. If the query\n   * specified a specific geographic location (for example, a city), this object contains the name\n   * of the geographic location and the current date and time of the location, in UTC. If the query\n   * specified a general geographic location, such as a state or country, this object contains the\n   * date and time of the primary city or state found in the specified state or country. If the\n   * location contains additional time zones, the otherCityTimes field contains the data and time\n   * of cities or states located in the other time zones.\n   */\n  primaryCityTime: TimeZoneTimeZoneInformation;\n  /**\n   * A list of dates and times of nearby time zones.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly otherCityTimes?: TimeZoneTimeZoneInformation[];\n}\n\n/**\n * Defines a video object that is relevant to the query.\n */\nexport interface VideoObject {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"VideoObject\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * Original URL to retrieve the source (file) for the media object (e.g the source URL for the\n   * image).\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly contentUrl?: string;\n  /**\n   * URL of the page that hosts the media object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly hostPageUrl?: string;\n  /**\n   * The width of the source media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly width?: number;\n  /**\n   * The height of the source media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly height?: number;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly motionThumbnailUrl?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly motionThumbnailId?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly embedHtml?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly allowHttpsEmbed?: boolean;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly viewCount?: number;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnail?: ImageObject;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly videoId?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly allowMobileEmbed?: boolean;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isSuperfresh?: boolean;\n}\n\n/**\n * Defines a video answer.\n */\nexport interface Videos {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Videos\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly followUpQueries?: Query[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly queryContext?: QueryContext;\n  /**\n   * The estimated number of webpages that are relevant to the query. Use this number along with\n   * the count and offset query parameters to page the results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalEstimatedMatches?: number;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isFamilyFriendly?: boolean;\n  /**\n   * A list of video objects that are relevant to the query.\n   */\n  value: VideoObject[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly nextOffset?: number;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly queryExpansions?: Query[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly relatedSearches?: Query[];\n}\n\n/**\n * Defines an expression and its answer\n */\nexport interface Computation {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Computation\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly followUpQueries?: Query[];\n  /**\n   * The math or conversion expression. If the query contains a request to convert units of measure\n   * (for example, meters to feet), this field contains the from units and value contains the to\n   * units. If the query contains a mathematical expression such as 2+2, this field contains the\n   * expression and value contains the answer. Note that mathematical expressions may be\n   * normalized. For example, if the query was sqrt(4^2+8^2), the normalized expression may be\n   * sqrt((4^2)+(8^2)). If the user's query is a math question and the textDecorations query\n   * parameter is set to true, the expression string may include formatting markers. For example,\n   * if the user's query is log(2), the normalized expression includes the subscript markers. For\n   * more information, see Hit Highlighting.\n   */\n  expression: string;\n  /**\n   * The expression's answer.\n   */\n  value: string;\n}\n\n/**\n * Defines a search result item to display\n */\nexport interface RankingRankingItem {\n  /**\n   * The answer that contains the item to display. Use the type to find the answer in the\n   * SearchResponse object. The type is the name of a SearchResponse field. Possible values\n   * include: 'WebPages', 'Images', 'SpellSuggestions', 'News', 'RelatedSearches', 'Videos',\n   * 'Computation', 'TimeZone'. Default value: 'WebPages'.\n   */\n  answerType: AnswerType;\n  /**\n   * A zero-based index of the item in the answer.If the item does not include this field, display\n   * all items in the answer. For example, display all news articles in the News answer.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly resultIndex?: number;\n  /**\n   * The ID that identifies either an answer to display or an item of an answer to display. If the\n   * ID identifies an answer, display all items of the answer.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: IdentifiableUnion;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly htmlIndex?: number;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly textualIndex?: number;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly screenshotIndex?: number;\n}\n\n/**\n * Defines a search results group, such as mainline.\n */\nexport interface RankingRankingGroup {\n  /**\n   * A list of search result items to display in the group.\n   */\n  items: RankingRankingItem[];\n}\n\n/**\n * Defines where on the search results page content should be placed and in what order.\n */\nexport interface RankingRankingResponse {\n  /**\n   * The search results that should be afforded the most visible treatment (for example, displayed\n   * above the mainline and sidebar).\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly pole?: RankingRankingGroup;\n  /**\n   * The search results to display in the mainline.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly mainline?: RankingRankingGroup;\n  /**\n   * The search results to display in the sidebar.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly sidebar?: RankingRankingGroup;\n}\n\n/**\n * Defines the top-level object that the response includes when the request succeeds.\n */\nexport interface SearchResponse {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"SearchResponse\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * An object that contains the query string that Bing used for the request. This object contains\n   * the query string as entered by the user. It may also contain an altered query string that Bing\n   * used for the query if the query string contained a spelling mistake.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly queryContext?: QueryContext;\n  /**\n   * A list of webpages that are relevant to the search query.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webPages?: WebWebAnswer;\n  /**\n   * A list of images that are relevant to the search query.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly images?: Images;\n  /**\n   * A list of news articles that are relevant to the search query.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly news?: News;\n  /**\n   * A list of related queries made by others.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly relatedSearches?: RelatedSearchesRelatedSearchAnswer;\n  /**\n   * The query string that likely represents the user's intent.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly spellSuggestions?: SpellSuggestions;\n  /**\n   * The date and time of one or more geographic locations.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly timeZone?: TimeZone;\n  /**\n   * A list of videos that are relevant to the search query.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly videos?: Videos;\n  /**\n   * The answer to a math expression or units conversion expression.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly computation?: Computation;\n  /**\n   * The order that Bing suggests that you display the search results in.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly rankingResponse?: RankingRankingResponse;\n}\n\n/**\n * Defines a local entity answer.\n */\nexport interface Places {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Places\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly followUpQueries?: Query[];\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly queryContext?: QueryContext;\n  /**\n   * The estimated number of webpages that are relevant to the query. Use this number along with\n   * the count and offset query parameters to page the results.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalEstimatedMatches?: number;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isFamilyFriendly?: boolean;\n  /**\n   * A list of local entities, such as restaurants or hotels.\n   */\n  value: ThingUnion[];\n}\n\n/**\n * Defines the error that occurred.\n */\nexport interface ErrorModel {\n  /**\n   * The error code that identifies the category of error. Possible values include: 'None',\n   * 'ServerError', 'InvalidRequest', 'RateLimitExceeded', 'InvalidAuthorization',\n   * 'InsufficientAuthorization'. Default value: 'None'.\n   */\n  code: ErrorCode;\n  /**\n   * The error code that further helps to identify the error. Possible values include:\n   * 'UnexpectedError', 'ResourceError', 'NotImplemented', 'ParameterMissing',\n   * 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked', 'AuthorizationMissing',\n   * 'AuthorizationRedundancy', 'AuthorizationDisabled', 'AuthorizationExpired'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly subCode?: ErrorSubCode;\n  /**\n   * A description of the error.\n   */\n  message: string;\n  /**\n   * A description that provides additional information about the error.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly moreDetails?: string;\n  /**\n   * The parameter in the request that caused the error.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly parameter?: string;\n  /**\n   * The parameter's value in the request that was not valid.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: string;\n}\n\n/**\n * The top-level response that represents a failed request.\n */\nexport interface ErrorResponse {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ErrorResponse\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * A list of errors that describe the reasons why the request failed.\n   */\n  errors: ErrorModel[];\n}\n\n/**\n * An interface representing WebWebGrouping.\n */\nexport interface WebWebGrouping {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Web/WebGrouping\";\n  webPages: WebPage[];\n}\n\n/**\n * Contains the possible cases for Intangible.\n */\nexport type IntangibleUnion = Intangible | StructuredValue;\n\n/**\n * An interface representing Intangible.\n */\nexport interface Intangible {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Intangible\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n}\n\n/**\n * An interface representing StructuredValue.\n */\nexport interface StructuredValue {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"StructuredValue\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL To Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n}\n\n/**\n * An interface representing WebSearchClientOptions.\n */\nexport interface WebSearchClientOptions extends ServiceClientOptions {\n  /**\n   * Supported Cognitive Services endpoints (protocol and hostname, for example:\n   * \"https://westus.api.cognitive.microsoft.com\", \"https://api.cognitive.microsoft.com\"). Default\n   * value: 'https://api.cognitive.microsoft.com'.\n   */\n  endpoint?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface WebSearchOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * A comma-delimited list of one or more languages to use for user interface strings. The list is\n   * in decreasing order of preference. For additional information, including expected format, see\n   * [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This header and the setLang\n   * query parameter are mutually exclusive; do not specify both. If you set this header, you must\n   * also specify the cc query parameter. Bing will use the first supported language it finds from\n   * the list, and combine that language with the cc parameter value to determine the market to\n   * return results for. If the list does not include a supported language, Bing will find the\n   * closest language and market that supports the request, and may use an aggregated or default\n   * market for the results instead of a specified one. You should use this header and the cc query\n   * parameter only if you specify multiple languages; otherwise, you should use the mkt and\n   * setLang query parameters. A user interface string is a string that's used as a label in a user\n   * interface. There are very few user interface strings in the JSON response objects. Any links\n   * in the response objects to Bing.com properties will apply the specified language.\n   */\n  acceptLanguage?: string;\n  /**\n   * By default, Bing returns cached content, if available. To prevent Bing from returning cached\n   * content, set the Pragma header to no-cache (for example, Pragma: no-cache).\n   */\n  pragma?: string;\n  /**\n   * The user agent originating the request. Bing uses the user agent to provide mobile users with\n   * an optimized experience. Although optional, you are strongly encouraged to always specify this\n   * header. The user-agent should be the same string that any commonly used browser would send.\n   * For information about user agents, see [RFC\n   * 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).\n   */\n  userAgent?: string;\n  /**\n   * Bing uses this header to provide users with consistent behavior across Bing API calls. Bing\n   * often flights new features and improvements, and it uses the client ID as a key for assigning\n   * traffic on different flights. If you do not use the same client ID for a user across multiple\n   * requests, then Bing may assign the user to multiple conflicting flights. Being assigned to\n   * multiple conflicting flights can lead to an inconsistent user experience. For example, if the\n   * second request has a different flight assignment than the first, the experience may be\n   * unexpected. Also, Bing can use the client ID to tailor web results to that client ID’s search\n   * history, providing a richer experience for the user. Bing also uses this header to help\n   * improve result rankings by analyzing the activity generated by a client ID. The relevance\n   * improvements help with better quality of results delivered by Bing APIs and in turn enables\n   * higher click-through rates for the API consumer. IMPORTANT: Although optional, you should\n   * consider this header required. Persisting the client ID across multiple requests for the same\n   * end user and device combination enables 1) the API consumer to receive a consistent user\n   * experience, and 2) higher click-through rates via better quality of results from the Bing\n   * APIs. Each user that uses your application on the device must have a unique, Bing generated\n   * client ID. If you do not include this header in the request, Bing generates an ID and returns\n   * it in the X-MSEdge-ClientID response header. The only time that you should NOT include this\n   * header in a request is the first time the user uses your app on that device. Use the client ID\n   * for each Bing API request that your app makes for this user on the device. Persist the client\n   * ID. To persist the ID in a browser app, use a persistent HTTP cookie to ensure the ID is used\n   * across all sessions. Do not use a session cookie. For other apps such as mobile apps, use the\n   * device's persistent storage to persist the ID. The next time the user uses your app on that\n   * device, get the client ID that you persisted. Bing responses may or may not include this\n   * header. If the response includes this header, capture the client ID and use it for all\n   * subsequent Bing requests for the user on that device. If you include the X-MSEdge-ClientID,\n   * you must not include cookies in the request.\n   */\n  clientId?: string;\n  /**\n   * The IPv4 or IPv6 address of the client device. The IP address is used to discover the user's\n   * location. Bing uses the location information to determine safe search behavior. Although\n   * optional, you are encouraged to always specify this header and the X-Search-Location header.\n   * Do not obfuscate the address (for example, by changing the last octet to 0). Obfuscating the\n   * address results in the location not being anywhere near the device's actual location, which\n   * may result in Bing serving erroneous results.\n   */\n  clientIp?: string;\n  /**\n   * A semicolon-delimited list of key/value pairs that describe the client's geographical\n   * location. Bing uses the location information to determine safe search behavior and to return\n   * relevant local content. Specify the key/value pair as <key>:<value>. The following are the\n   * keys that you use to specify the user's location. lat (required): The latitude of the client's\n   * location, in degrees. The latitude must be greater than or equal to -90.0 and less than or\n   * equal to +90.0. Negative values indicate southern latitudes and positive values indicate\n   * northern latitudes. long (required): The longitude of the client's location, in degrees. The\n   * longitude must be greater than or equal to -180.0 and less than or equal to +180.0. Negative\n   * values indicate western longitudes and positive values indicate eastern longitudes. re\n   * (required): The radius, in meters, which specifies the horizontal accuracy of the coordinates.\n   * Pass the value returned by the device's location service. Typical values might be 22m for\n   * GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP lookup. ts\n   * (optional): The UTC UNIX timestamp of when the client was at the location. (The UNIX timestamp\n   * is the number of seconds since January 1, 1970.) head (optional): The client's relative\n   * heading or direction of travel. Specify the direction of travel as degrees from 0 through 360,\n   * counting clockwise relative to true north. Specify this key only if the sp key is nonzero. sp\n   * (optional): The horizontal velocity (speed), in meters per second, that the client device is\n   * traveling. alt (optional): The altitude of the client device, in meters. are (optional): The\n   * radius, in meters, that specifies the vertical accuracy of the coordinates. Specify this key\n   * only if you specify the alt key. Although many of the keys are optional, the more information\n   * that you provide, the more accurate the location results are. Although optional, you are\n   * encouraged to always specify the user's geographical location. Providing the location is\n   * especially important if the client's IP address does not accurately reflect the user's\n   * physical location (for example, if the client uses VPN). For optimal results, you should\n   * include this header and the X-MSEdge-ClientIP header, but at a minimum, you should include\n   * this header.\n   */\n  location?: string;\n  /**\n   * The number of answers that you want the response to include. The answers that Bing returns are\n   * based on ranking. For example, if Bing returns webpages, images, videos, and relatedSearches\n   * for a request and you set this parameter to two (2), the response includes webpages and\n   * images.If you included the responseFilter query parameter in the same request and set it to\n   * webpages and news, the response would include only webpages.\n   */\n  answerCount?: number;\n  /**\n   * A 2-character country code of the country where the results come from. This API supports only\n   * the United States market. If you specify this query parameter, it must be set to us. If you\n   * set this parameter, you must also specify the Accept-Language header. Bing uses the first\n   * supported language it finds from the languages list, and combine that language with the\n   * country code that you specify to determine the market to return results for. If the languages\n   * list does not include a supported language, Bing finds the closest language and market that\n   * supports the request, or it may use an aggregated or default market for the results instead of\n   * a specified one. You should use this query parameter and the Accept-Language query parameter\n   * only if you specify multiple languages; otherwise, you should use the mkt and setLang query\n   * parameters. This parameter and the mkt query parameter are mutually exclusive—do not specify\n   * both.\n   */\n  countryCode?: string;\n  /**\n   * The number of search results to return in the response. The default is 10 and the maximum\n   * value is 50. The actual number delivered may be less than requested.Use this parameter along\n   * with the offset parameter to page results.For example, if your user interface displays 10\n   * search results per page, set count to 10 and offset to 0 to get the first page of results. For\n   * each subsequent page, increment offset by 10 (for example, 0, 10, 20). It is possible for\n   * multiple pages to include some overlap in results.\n   */\n  count?: number;\n  /**\n   * Filter search results by the following age values: Day—Return webpages that Bing discovered\n   * within the last 24 hours. Week—Return webpages that Bing discovered within the last 7 days.\n   * Month—Return webpages that discovered within the last 30 days. This filter applies only to\n   * webpage results and not to the other results such as news and images. Possible values include:\n   * 'Day', 'Week', 'Month'\n   */\n  freshness?: Freshness;\n  /**\n   * The market where the results come from. Typically, mkt is the country where the user is making\n   * the request from. However, it could be a different country if the user is not located in a\n   * country where Bing delivers results. The market must be in the form <language code>-<country\n   * code>. For example, en-US. The string is case insensitive. If known, you are encouraged to\n   * always specify the market. Specifying the market helps Bing route the request and return an\n   * appropriate and optimal response. If you specify a market that is not listed in Market Codes,\n   * Bing uses a best fit market code based on an internal mapping that is subject to change. This\n   * parameter and the cc query parameter are mutually exclusive—do not specify both. Default\n   * value: 'en-us'.\n   */\n  market?: string;\n  /**\n   * The zero-based offset that indicates the number of search results to skip before returning\n   * results. The default is 0. The offset should be less than (totalEstimatedMatches - count). Use\n   * this parameter along with the count parameter to page results. For example, if your user\n   * interface displays 10 search results per page, set count to 10 and offset to 0 to get the\n   * first page of results. For each subsequent page, increment offset by 10 (for example, 0, 10,\n   * 20). it is possible for multiple pages to include some overlap in results.\n   */\n  offset?: number;\n  /**\n   * A comma-delimited list of answers that you want the response to include regardless of their\n   * ranking. For example, if you set answerCount) to two (2) so Bing returns the top two ranked\n   * answers, but you also want the response to include news, you'd set promote to news. If the top\n   * ranked answers are webpages, images, videos, and relatedSearches, the response includes\n   * webpages and images because news is not a ranked answer. But if you set promote to video, Bing\n   * would promote the video answer into the response and return webpages, images, and videos. The\n   * answers that you want to promote do not count against the answerCount limit. For example, if\n   * the ranked answers are news, images, and videos, and you set answerCount to 1 and promote to\n   * news, the response contains news and images. Or, if the ranked answers are videos, images, and\n   * news, the response contains videos and news. Possible values are Computation, Images, News,\n   * RelatedSearches, SpellSuggestions, TimeZone, Videos, Webpages. Use only if you specify\n   * answerCount.\n   */\n  promote?: AnswerType[];\n  /**\n   * A comma-delimited list of answers to include in the response. If you do not specify this\n   * parameter, the response includes all search answers for which there's relevant data. Possible\n   * filter values are Computation, Images, News, RelatedSearches, SpellSuggestions, TimeZone,\n   * Videos, Webpages. Although you may use this filter to get a single answer, you should instead\n   * use the answer-specific endpoint in order to get richer results. For example, to receive only\n   * images, send the request to one of the Image Search API endpoints. The RelatedSearches and\n   * SpellSuggestions answers do not support a separate endpoint like the Image Search API does\n   * (only the Web Search API returns them). To include answers that would otherwise be excluded\n   * because of ranking, see the promote query parameter.\n   */\n  responseFilter?: AnswerType[];\n  /**\n   * A filter used to filter adult content. Off: Return webpages with adult text, images, or\n   * videos. Moderate: Return webpages with adult text, but not adult images or videos. Strict: Do\n   * not return webpages with adult text, images, or videos. The default is Moderate. If the\n   * request comes from a market that Bing's adult policy requires that safeSearch is set to\n   * Strict, Bing ignores the safeSearch value and uses Strict. If you use the site: query\n   * operator, there is the chance that the response may contain adult content regardless of what\n   * the safeSearch query parameter is set to. Use site: only if you are aware of the content on\n   * the site and your scenario supports the possibility of adult content. Possible values include:\n   * 'Off', 'Moderate', 'Strict'\n   */\n  safeSearch?: SafeSearch;\n  /**\n   * The language to use for user interface strings. Specify the language using the ISO 639-1\n   * 2-letter language code. For example, the language code for English is EN. The default is EN\n   * (English). Although optional, you should always specify the language. Typically, you set\n   * setLang to the same language specified by mkt unless the user wants the user interface strings\n   * displayed in a different language. This parameter and the Accept-Language header are mutually\n   * exclusive; do not specify both. A user interface string is a string that's used as a label in\n   * a user interface. There are few user interface strings in the JSON response objects. Also, any\n   * links to Bing.com properties in the response objects apply the specified language.\n   */\n  setLang?: string;\n  /**\n   * A Boolean value that determines whether display strings should contain decoration markers such\n   * as hit highlighting characters. If true, the strings may include markers. The default is\n   * false. To specify whether to use Unicode characters or HTML tags as the markers, see the\n   * textFormat query parameter.\n   */\n  textDecorations?: boolean;\n  /**\n   * The type of markers to use for text decorations (see the textDecorations query parameter).\n   * Possible values are Raw—Use Unicode characters to mark content that needs special formatting.\n   * The Unicode characters are in the range E000 through E019. For example, Bing uses E000 and\n   * E001 to mark the beginning and end of query terms for hit highlighting. HTML—Use HTML tags to\n   * mark content that needs special formatting. For example, use <b> tags to highlight query terms\n   * in display strings. The default is Raw. For display strings that contain escapable HTML\n   * characters such as <, >, and &, if textFormat is set to HTML, Bing escapes the characters as\n   * appropriate (for example, < is escaped to &lt;). Possible values include: 'Raw', 'Html'\n   */\n  textFormat?: TextFormat;\n}\n\n/**\n * Defines values for AnswerType.\n * Possible values include: 'WebPages', 'Images', 'SpellSuggestions', 'News', 'RelatedSearches',\n * 'Videos', 'Computation', 'TimeZone'\n * @readonly\n * @enum {string}\n */\nexport type AnswerType = 'WebPages' | 'Images' | 'SpellSuggestions' | 'News' | 'RelatedSearches' | 'Videos' | 'Computation' | 'TimeZone';\n\n/**\n * Defines values for ErrorCode.\n * Possible values include: 'None', 'ServerError', 'InvalidRequest', 'RateLimitExceeded',\n * 'InvalidAuthorization', 'InsufficientAuthorization'\n * @readonly\n * @enum {string}\n */\nexport type ErrorCode = 'None' | 'ServerError' | 'InvalidRequest' | 'RateLimitExceeded' | 'InvalidAuthorization' | 'InsufficientAuthorization';\n\n/**\n * Defines values for ErrorSubCode.\n * Possible values include: 'UnexpectedError', 'ResourceError', 'NotImplemented',\n * 'ParameterMissing', 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked',\n * 'AuthorizationMissing', 'AuthorizationRedundancy', 'AuthorizationDisabled',\n * 'AuthorizationExpired'\n * @readonly\n * @enum {string}\n */\nexport type ErrorSubCode = 'UnexpectedError' | 'ResourceError' | 'NotImplemented' | 'ParameterMissing' | 'ParameterInvalidValue' | 'HttpNotAllowed' | 'Blocked' | 'AuthorizationMissing' | 'AuthorizationRedundancy' | 'AuthorizationDisabled' | 'AuthorizationExpired';\n\n/**\n * Defines values for Freshness.\n * Possible values include: 'Day', 'Week', 'Month'\n * @readonly\n * @enum {string}\n */\nexport type Freshness = 'Day' | 'Week' | 'Month';\n\n/**\n * Defines values for SafeSearch.\n * Possible values include: 'Off', 'Moderate', 'Strict'\n * @readonly\n * @enum {string}\n */\nexport type SafeSearch = 'Off' | 'Moderate' | 'Strict';\n\n/**\n * Defines values for TextFormat.\n * Possible values include: 'Raw', 'Html'\n * @readonly\n * @enum {string}\n */\nexport type TextFormat = 'Raw' | 'Html';\n\n/**\n * Contains response data for the search operation.\n */\nexport type WebSearchResponse = SearchResponse & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SearchResponse;\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\n\nexport const QueryContext: msRest.CompositeMapper = {\n  serializedName: \"QueryContext\",\n  type: {\n    name: \"Composite\",\n    className: \"QueryContext\",\n    modelProperties: {\n      originalQuery: {\n        required: true,\n        serializedName: \"originalQuery\",\n        type: {\n          name: \"String\"\n        }\n      },\n      alteredQuery: {\n        readOnly: true,\n        serializedName: \"alteredQuery\",\n        type: {\n          name: \"String\"\n        }\n      },\n      alterationOverrideQuery: {\n        readOnly: true,\n        serializedName: \"alterationOverrideQuery\",\n        type: {\n          name: \"String\"\n        }\n      },\n      adultIntent: {\n        readOnly: true,\n        serializedName: \"adultIntent\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      askUserForLocation: {\n        readOnly: true,\n        serializedName: \"askUserForLocation\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isTransactional: {\n        readOnly: true,\n        serializedName: \"isTransactional\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const WebMetaTag: msRest.CompositeMapper = {\n  serializedName: \"Web/MetaTag\",\n  type: {\n    name: \"Composite\",\n    className: \"WebMetaTag\",\n    modelProperties: {\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      content: {\n        readOnly: true,\n        serializedName: \"content\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResponseBase: msRest.CompositeMapper = {\n  serializedName: \"ResponseBase\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"_type\",\n      clientName: \"_type\"\n    },\n    uberParent: \"ResponseBase\",\n    className: \"ResponseBase\",\n    modelProperties: {\n      _type: {\n        required: true,\n        serializedName: \"_type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Identifiable: msRest.CompositeMapper = {\n  serializedName: \"Identifiable\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Identifiable\",\n    modelProperties: {\n      ...ResponseBase.type.modelProperties,\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Response: msRest.CompositeMapper = {\n  serializedName: \"Response\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Response\",\n    modelProperties: {\n      ...Identifiable.type.modelProperties,\n      webSearchUrl: {\n        readOnly: true,\n        serializedName: \"webSearchUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Thing: msRest.CompositeMapper = {\n  serializedName: \"Thing\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Thing\",\n    modelProperties: {\n      ...Response.type.modelProperties,\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      url: {\n        readOnly: true,\n        serializedName: \"url\",\n        type: {\n          name: \"String\"\n        }\n      },\n      image: {\n        readOnly: true,\n        serializedName: \"image\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageObject\"\n        }\n      },\n      description: {\n        readOnly: true,\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      bingId: {\n        readOnly: true,\n        serializedName: \"bingId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreativeWork: msRest.CompositeMapper = {\n  serializedName: \"CreativeWork\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"CreativeWork\",\n    modelProperties: {\n      ...Thing.type.modelProperties,\n      thumbnailUrl: {\n        readOnly: true,\n        serializedName: \"thumbnailUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provider: {\n        readOnly: true,\n        serializedName: \"provider\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Thing\"\n            }\n          }\n        }\n      },\n      text: {\n        readOnly: true,\n        serializedName: \"text\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MediaObject: msRest.CompositeMapper = {\n  serializedName: \"MediaObject\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"MediaObject\",\n    modelProperties: {\n      ...CreativeWork.type.modelProperties,\n      contentUrl: {\n        readOnly: true,\n        serializedName: \"contentUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hostPageUrl: {\n        readOnly: true,\n        serializedName: \"hostPageUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      width: {\n        readOnly: true,\n        serializedName: \"width\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      height: {\n        readOnly: true,\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageObject: msRest.CompositeMapper = {\n  serializedName: \"ImageObject\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"ImageObject\",\n    modelProperties: {\n      ...MediaObject.type.modelProperties,\n      thumbnail: {\n        readOnly: true,\n        serializedName: \"thumbnail\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageObject\"\n        }\n      }\n    }\n  }\n};\n\nexport const WebPage: msRest.CompositeMapper = {\n  serializedName: \"WebPage\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"WebPage\",\n    modelProperties: {\n      ...CreativeWork.type.modelProperties,\n      displayUrl: {\n        readOnly: true,\n        serializedName: \"displayUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      snippet: {\n        readOnly: true,\n        serializedName: \"snippet\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deepLinks: {\n        readOnly: true,\n        serializedName: \"deepLinks\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WebPage\"\n            }\n          }\n        }\n      },\n      dateLastCrawled: {\n        readOnly: true,\n        serializedName: \"dateLastCrawled\",\n        type: {\n          name: \"String\"\n        }\n      },\n      searchTags: {\n        readOnly: true,\n        serializedName: \"searchTags\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WebMetaTag\"\n            }\n          }\n        }\n      },\n      primaryImageOfPage: {\n        readOnly: true,\n        serializedName: \"primaryImageOfPage\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageObject\"\n        }\n      }\n    }\n  }\n};\n\nexport const Answer: msRest.CompositeMapper = {\n  serializedName: \"Answer\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Answer\",\n    modelProperties: {\n      ...Response.type.modelProperties,\n      followUpQueries: {\n        readOnly: true,\n        serializedName: \"followUpQueries\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Query\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SearchResultsAnswer: msRest.CompositeMapper = {\n  serializedName: \"SearchResultsAnswer\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"SearchResultsAnswer\",\n    modelProperties: {\n      ...Answer.type.modelProperties,\n      queryContext: {\n        readOnly: true,\n        serializedName: \"queryContext\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryContext\"\n        }\n      },\n      totalEstimatedMatches: {\n        readOnly: true,\n        serializedName: \"totalEstimatedMatches\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      isFamilyFriendly: {\n        readOnly: true,\n        serializedName: \"isFamilyFriendly\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const WebWebAnswer: msRest.CompositeMapper = {\n  serializedName: \"Web/WebAnswer\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"WebWebAnswer\",\n    modelProperties: {\n      ...SearchResultsAnswer.type.modelProperties,\n      value: {\n        required: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WebPage\"\n            }\n          }\n        }\n      },\n      someResultsRemoved: {\n        readOnly: true,\n        serializedName: \"someResultsRemoved\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const Query: msRest.CompositeMapper = {\n  serializedName: \"Query\",\n  type: {\n    name: \"Composite\",\n    className: \"Query\",\n    modelProperties: {\n      text: {\n        required: true,\n        serializedName: \"text\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayText: {\n        readOnly: true,\n        serializedName: \"displayText\",\n        type: {\n          name: \"String\"\n        }\n      },\n      webSearchUrl: {\n        readOnly: true,\n        serializedName: \"webSearchUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      searchLink: {\n        readOnly: true,\n        serializedName: \"searchLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      thumbnail: {\n        readOnly: true,\n        serializedName: \"thumbnail\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageObject\"\n        }\n      }\n    }\n  }\n};\n\nexport const Images: msRest.CompositeMapper = {\n  serializedName: \"Images\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Images\",\n    modelProperties: {\n      ...SearchResultsAnswer.type.modelProperties,\n      nextOffset: {\n        readOnly: true,\n        serializedName: \"nextOffset\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      value: {\n        required: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ImageObject\"\n            }\n          }\n        }\n      },\n      queryExpansions: {\n        readOnly: true,\n        serializedName: \"queryExpansions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Query\"\n            }\n          }\n        }\n      },\n      similarTerms: {\n        readOnly: true,\n        serializedName: \"similarTerms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Query\"\n            }\n          }\n        }\n      },\n      relatedSearches: {\n        readOnly: true,\n        serializedName: \"relatedSearches\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Query\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Article: msRest.CompositeMapper = {\n  serializedName: \"Article\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Article\",\n    modelProperties: {\n      ...CreativeWork.type.modelProperties,\n      wordCount: {\n        readOnly: true,\n        serializedName: \"wordCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const NewsArticle: msRest.CompositeMapper = {\n  serializedName: \"NewsArticle\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"NewsArticle\",\n    modelProperties: {\n      ...Article.type.modelProperties\n    }\n  }\n};\n\nexport const News: msRest.CompositeMapper = {\n  serializedName: \"News\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"News\",\n    modelProperties: {\n      ...SearchResultsAnswer.type.modelProperties,\n      value: {\n        required: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NewsArticle\"\n            }\n          }\n        }\n      },\n      location: {\n        readOnly: true,\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RelatedSearchesRelatedSearchAnswer: msRest.CompositeMapper = {\n  serializedName: \"RelatedSearches/RelatedSearchAnswer\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"RelatedSearchesRelatedSearchAnswer\",\n    modelProperties: {\n      ...SearchResultsAnswer.type.modelProperties,\n      value: {\n        required: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Query\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SpellSuggestions: msRest.CompositeMapper = {\n  serializedName: \"SpellSuggestions\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"SpellSuggestions\",\n    modelProperties: {\n      ...SearchResultsAnswer.type.modelProperties,\n      value: {\n        required: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Query\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TimeZoneTimeZoneInformation: msRest.CompositeMapper = {\n  serializedName: \"TimeZone/TimeZoneInformation\",\n  type: {\n    name: \"Composite\",\n    className: \"TimeZoneTimeZoneInformation\",\n    modelProperties: {\n      location: {\n        required: true,\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      time: {\n        required: true,\n        serializedName: \"time\",\n        type: {\n          name: \"String\"\n        }\n      },\n      utcOffset: {\n        required: true,\n        serializedName: \"utcOffset\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TimeZone: msRest.CompositeMapper = {\n  serializedName: \"TimeZone\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"TimeZone\",\n    modelProperties: {\n      ...SearchResultsAnswer.type.modelProperties,\n      primaryCityTime: {\n        required: true,\n        serializedName: \"primaryCityTime\",\n        type: {\n          name: \"Composite\",\n          className: \"TimeZoneTimeZoneInformation\"\n        }\n      },\n      otherCityTimes: {\n        readOnly: true,\n        serializedName: \"otherCityTimes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TimeZoneTimeZoneInformation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VideoObject: msRest.CompositeMapper = {\n  serializedName: \"VideoObject\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"VideoObject\",\n    modelProperties: {\n      ...MediaObject.type.modelProperties,\n      motionThumbnailUrl: {\n        readOnly: true,\n        serializedName: \"motionThumbnailUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      motionThumbnailId: {\n        readOnly: true,\n        serializedName: \"motionThumbnailId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      embedHtml: {\n        readOnly: true,\n        serializedName: \"embedHtml\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowHttpsEmbed: {\n        readOnly: true,\n        serializedName: \"allowHttpsEmbed\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      viewCount: {\n        readOnly: true,\n        serializedName: \"viewCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      thumbnail: {\n        readOnly: true,\n        serializedName: \"thumbnail\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageObject\"\n        }\n      },\n      videoId: {\n        readOnly: true,\n        serializedName: \"videoId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowMobileEmbed: {\n        readOnly: true,\n        serializedName: \"allowMobileEmbed\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isSuperfresh: {\n        readOnly: true,\n        serializedName: \"isSuperfresh\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const Videos: msRest.CompositeMapper = {\n  serializedName: \"Videos\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Videos\",\n    modelProperties: {\n      ...SearchResultsAnswer.type.modelProperties,\n      value: {\n        required: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VideoObject\"\n            }\n          }\n        }\n      },\n      nextOffset: {\n        readOnly: true,\n        serializedName: \"nextOffset\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      queryExpansions: {\n        readOnly: true,\n        serializedName: \"queryExpansions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Query\"\n            }\n          }\n        }\n      },\n      relatedSearches: {\n        readOnly: true,\n        serializedName: \"relatedSearches\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Query\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Computation: msRest.CompositeMapper = {\n  serializedName: \"Computation\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Computation\",\n    modelProperties: {\n      ...Answer.type.modelProperties,\n      expression: {\n        required: true,\n        serializedName: \"expression\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        required: true,\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RankingRankingItem: msRest.CompositeMapper = {\n  serializedName: \"Ranking/RankingItem\",\n  type: {\n    name: \"Composite\",\n    className: \"RankingRankingItem\",\n    modelProperties: {\n      answerType: {\n        required: true,\n        serializedName: \"answerType\",\n        defaultValue: 'WebPages',\n        type: {\n          name: \"String\"\n        }\n      },\n      resultIndex: {\n        readOnly: true,\n        serializedName: \"resultIndex\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Composite\",\n          className: \"Identifiable\"\n        }\n      },\n      htmlIndex: {\n        readOnly: true,\n        serializedName: \"htmlIndex\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      textualIndex: {\n        readOnly: true,\n        serializedName: \"textualIndex\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      screenshotIndex: {\n        readOnly: true,\n        serializedName: \"screenshotIndex\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const RankingRankingGroup: msRest.CompositeMapper = {\n  serializedName: \"Ranking/RankingGroup\",\n  type: {\n    name: \"Composite\",\n    className: \"RankingRankingGroup\",\n    modelProperties: {\n      items: {\n        required: true,\n        serializedName: \"items\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RankingRankingItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RankingRankingResponse: msRest.CompositeMapper = {\n  serializedName: \"Ranking/RankingResponse\",\n  type: {\n    name: \"Composite\",\n    className: \"RankingRankingResponse\",\n    modelProperties: {\n      pole: {\n        readOnly: true,\n        serializedName: \"pole\",\n        type: {\n          name: \"Composite\",\n          className: \"RankingRankingGroup\"\n        }\n      },\n      mainline: {\n        readOnly: true,\n        serializedName: \"mainline\",\n        type: {\n          name: \"Composite\",\n          className: \"RankingRankingGroup\"\n        }\n      },\n      sidebar: {\n        readOnly: true,\n        serializedName: \"sidebar\",\n        type: {\n          name: \"Composite\",\n          className: \"RankingRankingGroup\"\n        }\n      }\n    }\n  }\n};\n\nexport const SearchResponse: msRest.CompositeMapper = {\n  serializedName: \"SearchResponse\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"SearchResponse\",\n    modelProperties: {\n      ...Response.type.modelProperties,\n      queryContext: {\n        readOnly: true,\n        serializedName: \"queryContext\",\n        type: {\n          name: \"Composite\",\n          className: \"QueryContext\"\n        }\n      },\n      webPages: {\n        readOnly: true,\n        serializedName: \"webPages\",\n        type: {\n          name: \"Composite\",\n          className: \"WebWebAnswer\"\n        }\n      },\n      images: {\n        readOnly: true,\n        serializedName: \"images\",\n        type: {\n          name: \"Composite\",\n          className: \"Images\"\n        }\n      },\n      news: {\n        readOnly: true,\n        serializedName: \"news\",\n        type: {\n          name: \"Composite\",\n          className: \"News\"\n        }\n      },\n      relatedSearches: {\n        readOnly: true,\n        serializedName: \"relatedSearches\",\n        type: {\n          name: \"Composite\",\n          className: \"RelatedSearchesRelatedSearchAnswer\"\n        }\n      },\n      spellSuggestions: {\n        readOnly: true,\n        serializedName: \"spellSuggestions\",\n        type: {\n          name: \"Composite\",\n          className: \"SpellSuggestions\"\n        }\n      },\n      timeZone: {\n        readOnly: true,\n        serializedName: \"timeZone\",\n        type: {\n          name: \"Composite\",\n          className: \"TimeZone\"\n        }\n      },\n      videos: {\n        readOnly: true,\n        serializedName: \"videos\",\n        type: {\n          name: \"Composite\",\n          className: \"Videos\"\n        }\n      },\n      computation: {\n        readOnly: true,\n        serializedName: \"computation\",\n        type: {\n          name: \"Composite\",\n          className: \"Computation\"\n        }\n      },\n      rankingResponse: {\n        readOnly: true,\n        serializedName: \"rankingResponse\",\n        type: {\n          name: \"Composite\",\n          className: \"RankingRankingResponse\"\n        }\n      }\n    }\n  }\n};\n\nexport const Places: msRest.CompositeMapper = {\n  serializedName: \"Places\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Places\",\n    modelProperties: {\n      ...SearchResultsAnswer.type.modelProperties,\n      value: {\n        required: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Thing\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: msRest.CompositeMapper = {\n  serializedName: \"Error\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      code: {\n        required: true,\n        serializedName: \"code\",\n        defaultValue: 'None',\n        type: {\n          name: \"String\"\n        }\n      },\n      subCode: {\n        readOnly: true,\n        serializedName: \"subCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        required: true,\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      moreDetails: {\n        readOnly: true,\n        serializedName: \"moreDetails\",\n        type: {\n          name: \"String\"\n        }\n      },\n      parameter: {\n        readOnly: true,\n        serializedName: \"parameter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: msRest.CompositeMapper = {\n  serializedName: \"ErrorResponse\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      ...Response.type.modelProperties,\n      errors: {\n        required: true,\n        serializedName: \"errors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorModel\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const WebWebGrouping: msRest.CompositeMapper = {\n  serializedName: \"Web/WebGrouping\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"_type\",\n      clientName: \"_type\"\n    },\n    uberParent: \"WebWebGrouping\",\n    className: \"WebWebGrouping\",\n    modelProperties: {\n      webPages: {\n        required: true,\n        serializedName: \"webPages\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WebPage\"\n            }\n          }\n        }\n      },\n      _type: {\n        required: true,\n        serializedName: \"_type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Intangible: msRest.CompositeMapper = {\n  serializedName: \"Intangible\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Intangible\",\n    modelProperties: {\n      ...Thing.type.modelProperties\n    }\n  }\n};\n\nexport const StructuredValue: msRest.CompositeMapper = {\n  serializedName: \"StructuredValue\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"StructuredValue\",\n    modelProperties: {\n      ...Intangible.type.modelProperties\n    }\n  }\n};\n\nexport const discriminators = {\n  'ResponseBase.ImageObject' : ImageObject,\n  'ResponseBase.WebPage' : WebPage,\n  'ResponseBase.Web/WebAnswer' : WebWebAnswer,\n  'ResponseBase.Images' : Images,\n  'ResponseBase.NewsArticle' : NewsArticle,\n  'ResponseBase.News' : News,\n  'ResponseBase.RelatedSearches/RelatedSearchAnswer' : RelatedSearchesRelatedSearchAnswer,\n  'ResponseBase.SpellSuggestions' : SpellSuggestions,\n  'ResponseBase.TimeZone' : TimeZone,\n  'ResponseBase.VideoObject' : VideoObject,\n  'ResponseBase.Videos' : Videos,\n  'ResponseBase.Computation' : Computation,\n  'ResponseBase.Identifiable' : Identifiable,\n  'ResponseBase.SearchResponse' : SearchResponse,\n  'ResponseBase.Response' : Response,\n  'ResponseBase.Thing' : Thing,\n  'ResponseBase.Places' : Places,\n  'ResponseBase.SearchResultsAnswer' : SearchResultsAnswer,\n  'ResponseBase.Answer' : Answer,\n  'ResponseBase.ErrorResponse' : ErrorResponse,\n  'Web/WebGrouping' : WebWebGrouping,\n  'ResponseBase' : ResponseBase,\n  'ResponseBase.CreativeWork' : CreativeWork,\n  'ResponseBase.Intangible' : Intangible,\n  'ResponseBase.MediaObject' : MediaObject,\n  'ResponseBase.Article' : Article,\n  'ResponseBase.StructuredValue' : StructuredValue\n\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  Answer,\n  Article,\n  Computation,\n  CreativeWork,\n  ErrorModel,\n  ErrorResponse,\n  Identifiable,\n  ImageObject,\n  Images,\n  Intangible,\n  MediaObject,\n  News,\n  NewsArticle,\n  Places,\n  Query,\n  QueryContext,\n  RankingRankingGroup,\n  RankingRankingItem,\n  RankingRankingResponse,\n  RelatedSearchesRelatedSearchAnswer,\n  Response,\n  ResponseBase,\n  SearchResponse,\n  SearchResultsAnswer,\n  SpellSuggestions,\n  StructuredValue,\n  Thing,\n  TimeZone,\n  TimeZoneTimeZoneInformation,\n  VideoObject,\n  Videos,\n  WebMetaTag,\n  WebPage,\n  WebWebAnswer\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const acceptLanguage: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"acceptLanguage\"\n  ],\n  mapper: {\n    serializedName: \"Accept-Language\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const answerCount: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"answerCount\"\n  ],\n  mapper: {\n    serializedName: \"answerCount\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const clientId: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"clientId\"\n  ],\n  mapper: {\n    serializedName: \"X-MSEdge-ClientID\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const clientIp: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"clientIp\"\n  ],\n  mapper: {\n    serializedName: \"X-MSEdge-ClientIP\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const count: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"count\"\n  ],\n  mapper: {\n    serializedName: \"count\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const countryCode: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"countryCode\"\n  ],\n  mapper: {\n    serializedName: \"cc\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const endpoint: msRest.OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    required: true,\n    serializedName: \"Endpoint\",\n    defaultValue: 'https://api.cognitive.microsoft.com',\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const freshness: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"freshness\"\n  ],\n  mapper: {\n    serializedName: \"freshness\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const location: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"location\"\n  ],\n  mapper: {\n    serializedName: \"X-Search-Location\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const market: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"market\"\n  ],\n  mapper: {\n    serializedName: \"mkt\",\n    defaultValue: 'en-us',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const offset: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"offset\"\n  ],\n  mapper: {\n    serializedName: \"offset\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\nexport const pragma: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"pragma\"\n  ],\n  mapper: {\n    serializedName: \"Pragma\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const promote: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"promote\"\n  ],\n  mapper: {\n    serializedName: \"promote\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: msRest.QueryCollectionFormat.Csv\n};\nexport const query: msRest.OperationQueryParameter = {\n  parameterPath: \"query\",\n  mapper: {\n    required: true,\n    serializedName: \"q\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const responseFilter: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"responseFilter\"\n  ],\n  mapper: {\n    serializedName: \"responseFilter\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: msRest.QueryCollectionFormat.Csv\n};\nexport const safeSearch: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"safeSearch\"\n  ],\n  mapper: {\n    serializedName: \"safeSearch\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const setLang: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"setLang\"\n  ],\n  mapper: {\n    serializedName: \"setLang\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const textDecorations: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"textDecorations\"\n  ],\n  mapper: {\n    serializedName: \"textDecorations\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\nexport const textFormat: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"textFormat\"\n  ],\n  mapper: {\n    serializedName: \"textFormat\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const userAgent: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"userAgent\"\n  ],\n  mapper: {\n    serializedName: \"User-Agent\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const xBingApisSDK: msRest.OperationParameter = {\n  parameterPath: \"xBingApisSDK\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"X-BingApis-SDK\",\n    defaultValue: 'true',\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/webMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { WebSearchClientContext } from \"../webSearchClientContext\";\n\n/** Class representing a Web. */\nexport class Web {\n  private readonly client: WebSearchClientContext;\n\n  /**\n   * Create a Web.\n   * @param {WebSearchClientContext} client Reference to the service client.\n   */\n  constructor(client: WebSearchClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * @summary The Web Search API lets you send a search query to Bing and get back search results\n   * that include links to webpages, images, and more.\n   * @param query The user's search query term. The term may not be empty. The term may contain Bing\n   * Advanced Operators. For example, to limit results to a specific domain, use the site: operator.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.WebSearchResponse>\n   */\n  search(query: string, options?: Models.WebSearchOptionalParams): Promise<Models.WebSearchResponse>;\n  /**\n   * @param query The user's search query term. The term may not be empty. The term may contain Bing\n   * Advanced Operators. For example, to limit results to a specific domain, use the site: operator.\n   * @param callback The callback\n   */\n  search(query: string, callback: msRest.ServiceCallback<Models.SearchResponse>): void;\n  /**\n   * @param query The user's search query term. The term may not be empty. The term may contain Bing\n   * Advanced Operators. For example, to limit results to a specific domain, use the site: operator.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  search(query: string, options: Models.WebSearchOptionalParams, callback: msRest.ServiceCallback<Models.SearchResponse>): void;\n  search(query: string, options?: Models.WebSearchOptionalParams | msRest.ServiceCallback<Models.SearchResponse>, callback?: msRest.ServiceCallback<Models.SearchResponse>): Promise<Models.WebSearchResponse> {\n    return this.client.sendOperationRequest(\n      {\n        query,\n        options\n      },\n      searchOperationSpec,\n      callback) as Promise<Models.WebSearchResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst searchOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"search\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.answerCount,\n    Parameters.countryCode,\n    Parameters.count,\n    Parameters.freshness,\n    Parameters.market,\n    Parameters.offset,\n    Parameters.promote,\n    Parameters.query,\n    Parameters.responseFilter,\n    Parameters.safeSearch,\n    Parameters.setLang,\n    Parameters.textDecorations,\n    Parameters.textFormat\n  ],\n  headerParameters: [\n    Parameters.xBingApisSDK,\n    Parameters.acceptLanguage,\n    Parameters.pragma,\n    Parameters.userAgent,\n    Parameters.clientId,\n    Parameters.clientIp,\n    Parameters.location\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.SearchResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"./models\";\n\nconst packageName = \"@azure/cognitiveservices-websearch\";\nconst packageVersion = \"3.0.1\";\n\nexport class WebSearchClientContext extends msRest.ServiceClient {\n  endpoint?: string;\n  credentials: msRest.ServiceClientCredentials;\n\n  /**\n   * Initializes a new instance of the WebSearchClientContext class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, options?: Models.WebSearchClientOptions) {\n    if (credentials == undefined) {\n      throw new Error(\"'credentials' cannot be null.\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = msRest.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.endpoint = 'https://api.cognitive.microsoft.com';\n    this.baseUri = \"{Endpoint}/bing/v7.0\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.credentials = credentials;\n    if (options.endpoint !== null && options.endpoint !== undefined) {\n      this.endpoint = options.endpoint;\n    }\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { WebSearchClientContext } from \"./webSearchClientContext\";\n\nclass WebSearchClient extends WebSearchClientContext {\n  // Operation groups\n  web: operations.Web;\n\n  /**\n   * Initializes a new instance of the WebSearchClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, options?: Models.WebSearchClientOptions) {\n    super(credentials, options);\n    this.web = new operations.Web(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  WebSearchClient,\n  WebSearchClientContext,\n  Models as WebSearchModels,\n  Mappers as WebSearchMappers\n};\nexport * from \"./operations\";\n"],"names":["msRest.QueryCollectionFormat","msRest.Serializer","Parameters.endpoint","Parameters.answerCount","Parameters.countryCode","Parameters.count","Parameters.freshness","Parameters.market","Parameters.offset","Parameters.promote","Parameters.query","Parameters.responseFilter","Parameters.safeSearch","Parameters.setLang","Parameters.textDecorations","Parameters.textFormat","Parameters.xBingApisSDK","Parameters.acceptLanguage","Parameters.pragma","Parameters.userAgent","Parameters.clientId","Parameters.clientIp","Parameters.location","Mappers.SearchResponse","Mappers.ErrorResponse","msRest.getDefaultUserAgentValue","msRest.ServiceClient","operations.Web"],"mappings":"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"}