import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { WebSearchClientContext } from "../webSearchClientContext";
/** Class representing a Web. */
export declare class Web {
    private readonly client;
    /**
     * Create a Web.
     * @param {WebSearchClientContext} client Reference to the service client.
     */
    constructor(client: WebSearchClientContext);
    /**
     * @summary The Web Search API lets you send a search query to Bing and get back search results
     * that include links to webpages, images, and more.
     * @param query The user's search query term. The term may not be empty. The term may contain Bing
     * Advanced Operators. For example, to limit results to a specific domain, use the site: operator.
     * @param [options] The optional parameters
     * @returns Promise<Models.WebSearchResponse>
     */
    search(query: string, options?: Models.WebSearchOptionalParams): Promise<Models.WebSearchResponse>;
    /**
     * @param query The user's search query term. The term may not be empty. The term may contain Bing
     * Advanced Operators. For example, to limit results to a specific domain, use the site: operator.
     * @param callback The callback
     */
    search(query: string, callback: msRest.ServiceCallback<Models.SearchResponse>): void;
    /**
     * @param query The user's search query term. The term may not be empty. The term may contain Bing
     * Advanced Operators. For example, to limit results to a specific domain, use the site: operator.
     * @param options The optional parameters
     * @param callback The callback
     */
    search(query: string, options: Models.WebSearchOptionalParams, callback: msRest.ServiceCallback<Models.SearchResponse>): void;
}
//# sourceMappingURL=web.d.ts.map